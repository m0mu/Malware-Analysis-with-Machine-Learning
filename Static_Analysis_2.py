
# coding: utf-8

# In[110]:

import pefile
from collections import OrderedDict

path = 'C:/Users/momo/Desktop/benign/0cd2d23daea0baff1d553982269460d09864a3eb68c9e93339a11978a877498f'
pe = pefile.PE(path)

list_of_dict = []
attr_dict = OrderedDict()


# In[125]:

def DOS_HEADER():
    global attr_dict
    attr_dict["e_magic"] = pe.DOS_HEADER.e_magic
    attr_dict["e_cblp"] = pe.DOS_HEADER.e_cblp
    attr_dict["e_cp"] = pe.DOS_HEADER.e_cp
    attr_dict["e_crlc"] = pe.DOS_HEADER.e_crlc
    attr_dict["e_cparhdr"] = pe.DOS_HEADER.e_cparhdr
    attr_dict["e_minialloc"] = pe.DOS_HEADER.e_minalloc
    attr_dict["e_maxalloc"] = pe.DOS_HEADER.e_maxalloc
    attr_dict["e_ss"] = pe.DOS_HEADER.e_ss
    attr_dict["e_sp"] = pe.DOS_HEADER.e_sp
    attr_dict["e_csum"] = pe.DOS_HEADER.e_csum
    attr_dict["e_ip"] = pe.DOS_HEADER.e_ip
    attr_dict["e_cs"] = pe.DOS_HEADER.e_cs
    attr_dict["e_lfarlc"] = pe.DOS_HEADER.e_lfarlc
    attr_dict["e_ovno"] = pe.DOS_HEADER.e_ovno
    attr_dict["e_res"] = pe.DOS_HEADER.e_res
    attr_dict["e_oemid"] = pe.DOS_HEADER.e_oemid
    attr_dict["e_oeminfo"] = pe.DOS_HEADER.e_oeminfo
    attr_dict["e_res2"] = pe.DOS_HEADER.e_res2
    attr_dict["e_lfanew"] = pe.DOS_HEADER.e_lfanew

DOS_HEADER()
print(attr_dict)


# In[124]:

def FILE_HEADER():
    global attr_dict
    attr_dict["Machine"] = pe.FILE_HEADER.Machine
    attr_dict["NumberOfSections"] = pe.FILE_HEADER.NumberOfSections
    attr_dict["TimeDateStamp"] = pe.FILE_HEADER.TimeDateStamp
    attr_dict["PointerToSymbolTable"] = pe.FILE_HEADER.PointerToSymbolTable
    attr_dict["NumberOfSymbols"] = pe.FILE_HEADER.NumberOfSymbols
    attr_dict["SizeOfOptionalHeader"] = pe.FILE_HEADER.SizeOfOptionalHeader
    attr_dict["Characteristics"] = pe.FILE_HEADER.Characteristics

FILE_HEADER()
print(attr_dict)


# In[123]:

def OPTIONAL_HEADER():
    global attr_dict
    attr_dict["Magic"] = pe.OPTIONAL_HEADER.Magic
    attr_dict["MajorLinkerVersion"] = pe.OPTIONAL_HEADER.MajorLinkerVersion
    attr_dict["MinorLinkerVersion"] = pe.OPTIONAL_HEADER.MinorLinkerVersion
    attr_dict["SizeOfCode"] = pe.OPTIONAL_HEADER.SizeOfCode
    attr_dict["SizeOfInitializedData"] = pe.OPTIONAL_HEADER.SizeOfInitializedData
    attr_dict["SizeOfUninitializedData"] = pe.OPTIONAL_HEADER.SizeOfUninitializedData
    attr_dict["AddressOfEntryPoint"] = pe.OPTIONAL_HEADER.AddressOfEntryPoint
    attr_dict["BaseOfCode"] = pe.OPTIONAL_HEADER.BaseOfCode
    attr_dict["BaseOfData"] = pe.OPTIONAL_HEADER.BaseOfData
    attr_dict["ImageBase"] = pe.OPTIONAL_HEADER.ImageBase
    attr_dict["SectionAlignment"] = pe.OPTIONAL_HEADER.SectionAlignment
    attr_dict["FileAlignment"] = pe.OPTIONAL_HEADER.FileAlignment
    attr_dict["MajorOperatingSystemVersion"] = pe.OPTIONAL_HEADER.MajorOperatingSystemVersion
    attr_dict["MinorOperatingSystemVersion"] = pe.OPTIONAL_HEADER.MinorOperatingSystemVersion
    attr_dict["MajorImageVersion"] = pe.OPTIONAL_HEADER.MajorImageVersion
    attr_dict["MinorImageVersion"] = pe.OPTIONAL_HEADER.MinorImageVersion
    attr_dict["MajorSubsystemVerison"] = pe.OPTIONAL_HEADER.MajorSubsystemVersion
    attr_dict["MinorSubsystemVersion"] = pe.OPTIONAL_HEADER.MinorSubsystemVersion
    attr_dict["Reserved1"] = pe.OPTIONAL_HEADER.Reserved1
    attr_dict["SizeOfImage"] = pe.OPTIONAL_HEADER.SizeOfImage
    attr_dict["SizeOfHeaders"] = pe.OPTIONAL_HEADER.SizeOfHeaders
    attr_dict["CheckSum"] = pe.OPTIONAL_HEADER.CheckSum
    attr_dict["Subsystem"] = pe.OPTIONAL_HEADER.Subsystem
    attr_dict["DllCharacteristics"] = pe.OPTIONAL_HEADER.DllCharacteristics
    attr_dict["SizeOfStackReserve"] = pe.OPTIONAL_HEADER.SizeOfStackReserve
    attr_dict["SizeOfStackCommit"] = pe.OPTIONAL_HEADER.SizeOfStackCommit
    attr_dict["SizeOfHeapReserve"] = pe.OPTIONAL_HEADER.SizeOfHeapReserve
    attr_dict["SizeOfHeapCommit"] = pe.OPTIONAL_HEADER.SizeOfHeapCommit
    attr_dict["LoaderFlags"] = pe.OPTIONAL_HEADER.LoaderFlags
    attr_dict["NumberOfRvaAndSizes"] = pe.OPTIONAL_HEADER.NumberOfRvaAndSizes

OPTIONAL_HEADER()
print(attr_dict)


# In[122]:

# appending dict to list_of_dict
list_of_dict.append(attr_dict)
print(list_of_dict)


# In[ ]:

# Working with Pandas

